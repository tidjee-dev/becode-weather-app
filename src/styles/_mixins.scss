@use "variables" as *;
@use "functions" as *;

@mixin flex-center($direction: row, $gap: 0) {
  display: flex;
  flex-direction: $direction;
  justify-content: center;
  align-items: center;
  gap: $gap;
}

@mixin min-media-query($breakpoint) {
  @media (min-width: $breakpoint) {
    @content;
  }
}

@mixin transition($properties: all, $duration: 0.3s, $ease: ease) {
  transition: $properties $duration $ease;
}

@mixin glassmorphism($bg-color: $color-light,
  $alpha: 80%,
  $shadow-x: 0,
  $shadow-y: 0,
  $shadow-size: rem(10),
  $shadow-color: $shadow-dark,
  $shadow-alpha: 50%,
  $shadow-blur: rem(10),
  $shadow-outset: true,
  $shadow-inset: false,
  $border-radius: rem(10)) {
  background-color: rgba($color: $bg-color, $alpha: $alpha);

  @if $shadow-outset && $shadow-inset {
    box-shadow:
      $shadow-x $shadow-y $shadow-size rgba($color: $shadow-color, $alpha: $shadow-alpha),
      $shadow-x $shadow-y $shadow-size rgba($color: $shadow-color, $alpha: $shadow-alpha) inset;
  }

  @else if $shadow-outset {
    box-shadow:
      $shadow-x $shadow-y $shadow-size rgba($color: $shadow-color, $alpha: $shadow-alpha);
  }

  @else if $shadow-inset {
    box-shadow:
      $shadow-x $shadow-y $shadow-size rgba($color: $shadow-color, $alpha: $shadow-alpha) inset;
  }

  backdrop-filter: blur($shadow-blur);
  border-radius: $border-radius;
}

@mixin button($bg-color: $color-primary,
  $text-color: $color-light,
  $hover-bg-color: $color-secondary,
  $hover-text-color: $color-light,
  $border: 1px solid transparent,
  $hover-border: 1px solid $color-secondary,
  $border-radius: 5px) {
  background-color: $bg-color;
  color: $text-color;
  border: $border;
  border-radius: $border-radius;
  padding: 0.5rem 1rem;
  cursor: pointer;
  transition: all 0.3s ease-in-out;

  &:hover {
    background-color: $hover-bg-color;
    color: $hover-text-color;
    border: $hover-border;

  }
}